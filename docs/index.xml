<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Experimenting Hugo !</title><link>https://joncourbon.github.io/hugoexperimentation/</link><description>Recent content on Experimenting Hugo !</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 05 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://joncourbon.github.io/hugoexperimentation/index.xml" rel="self" type="application/rss+xml"/><item><title>Asset concatenation and minification</title><link>https://joncourbon.github.io/hugoexperimentation/post/2020-11-05-assetconcatminify/</link><pubDate>Thu, 05 Nov 2020 00:00:00 +0000</pubDate><guid>https://joncourbon.github.io/hugoexperimentation/post/2020-11-05-assetconcatminify/</guid><description>Initial elements (with CSS files in the static/ folder)
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;{{ &amp;quot;css/milligram.css&amp;quot; | relURL }}&amp;quot;&amp;gt; &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;{{ &amp;quot;css/style.css&amp;quot; | relURL }}&amp;quot;&amp;gt; Asset bundling in Hugo allows the processing (minification, concatenation, &amp;hellip;) of any CSS, JS, JSON, HTML, SVG or XML resources. Refer to: https://gohugo.io/hugo-pipes/bundling/
Asset pipeline We will use asset pipelines =&amp;gt; ressources that will be processed must be in the folder assets/ (and no more in static/ folder).</description></item><item><title>Removing un-necessary codes</title><link>https://joncourbon.github.io/hugoexperimentation/ressources/2020-11-05-purgecss/</link><pubDate>Thu, 05 Nov 2020 00:00:00 +0000</pubDate><guid>https://joncourbon.github.io/hugoexperimentation/ressources/2020-11-05-purgecss/</guid><description>Purging CSS Many CSS files (from frameworks) are used when coding a website. But in practise, only a small set of the framework is used, and a lot of unused CSS styles will be included. To reduce files size, it is desiderable to remove unused selectors from CSS, resulting in smaller CSS files. This can be done only in a post-process steps as it requires knowing required CSS !
Example tools:</description></item><item><title>Asset concatenation and minification</title><link>https://joncourbon.github.io/hugoexperimentation/ressources/2020-11-04-assetconcatminify/</link><pubDate>Wed, 04 Nov 2020 00:00:00 +0000</pubDate><guid>https://joncourbon.github.io/hugoexperimentation/ressources/2020-11-04-assetconcatminify/</guid><description>Most of the files used in websites are text-based: HTML, CSS, Js. During development, comments, spaces and indentation are required to improve code lisibility. However, these elements make the files heavy whereas they are not necessary for a functionality point of view.
Minification is the process that removes characters (white space, new line, comment out code) or modifies some unnecessary characters from the code. It compresses the original size to the smallest size and does not affect to the operation of the code.</description></item><item><title>Milligram (CSS Framework)</title><link>https://joncourbon.github.io/hugoexperimentation/ressources/2020-11-04-csslib/</link><pubDate>Wed, 04 Nov 2020 00:00:00 +0000</pubDate><guid>https://joncourbon.github.io/hugoexperimentation/ressources/2020-11-04-csslib/</guid><description>We chose the minimalist CSS framework: Milligram https://milligram.io/ because:
it&amp;rsquo;s a minimal setup of styles it&amp;rsquo;s only 2kb gzipped It has some usefull functionnalities:
The Grid is a fluid system with a max width of 112.0rem (1120px), that shrinks with the browser/device at smaller sizes. Drawbacks:
Milligram uses the font-family Roboto (thus the font files must be loaded)</description></item><item><title>The basic website</title><link>https://joncourbon.github.io/hugoexperimentation/post/2020-11-04-basic_website/</link><pubDate>Wed, 04 Nov 2020 00:00:00 +0000</pubDate><guid>https://joncourbon.github.io/hugoexperimentation/post/2020-11-04-basic_website/</guid><description>We have decided to build our website using Hugo! https://joncourbon.github.io/hugoexperimentation/ressources/2020-11-03-hugo/
Creation of the website:
hugo new site mmiLePuy cd mmiLePuy git init Creation of a new template
hugo new template lightemplate Tree view of the created folder: Modify config.toml
baseURL = &amp;quot;&amp;quot; languageCode = &amp;quot;fr-FR&amp;quot; title = &amp;quot;MMI Le Puy reloaded&amp;quot; theme=&amp;quot;lighttemplate&amp;quot; Template files We chose the minimalist CSS framework: Milligram https://joncourbon.github.io/hugoexperimentation/ressources/2020-11-04-csslib/
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;{{ &amp;quot;css/milligram.css&amp;quot; | relURL }}&amp;quot;&amp;gt; &amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;{{ &amp;quot;css/style.</description></item><item><title>Hugo !</title><link>https://joncourbon.github.io/hugoexperimentation/ressources/2020-11-03-hugo/</link><pubDate>Tue, 03 Nov 2020 00:00:00 +0000</pubDate><guid>https://joncourbon.github.io/hugoexperimentation/ressources/2020-11-03-hugo/</guid><description>Hugo is a popular open-source static site generators. Its speed and flexibility are very interesting.
The main documentation for Hugo can be found on the website https://gohugo.io/
First step: Installing Hugo
Solutions: https://gohugo.io/getting-started/installing/ Using the Snap Store: https://snapcraft.io/hugo This website is built with the &amp;ldquo;Beautiful Hugo&amp;rdquo; theme: https://pages.gitlab.io/hugo/</description></item><item><title>About me</title><link>https://joncourbon.github.io/hugoexperimentation/page/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://joncourbon.github.io/hugoexperimentation/page/about/</guid><description>My name is Jonathan COURBON</description></item></channel></rss>