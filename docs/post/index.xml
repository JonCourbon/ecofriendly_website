<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Towards eco-friendly websites !</title><link>https://joncourbon.github.io/ecofriendly_website/post/</link><description>Recent content in Posts on Towards eco-friendly websites !</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 16 Nov 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://joncourbon.github.io/ecofriendly_website/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Image processing functionality optimized</title><link>https://joncourbon.github.io/ecofriendly_website/post/2020-11-16-imageprocessing2/</link><pubDate>Mon, 16 Nov 2020 00:00:00 +0000</pubDate><guid>https://joncourbon.github.io/ecofriendly_website/post/2020-11-16-imageprocessing2/</guid><description>We modify the code within the shortcode imgproc.html such that resizing is not done if image width is under 600px (excepted if we force it).
{{ $force_opt := default &amp;quot;0&amp;quot; (.Get &amp;quot;forceredim&amp;quot;)}} {{ if or (ge $image.Width &amp;quot;600&amp;quot;) (and (le $image.Width &amp;quot;600&amp;quot;) (eq $force_opt &amp;quot;1&amp;quot;))}} {{ if (.Get &amp;quot;fill&amp;quot;)}} {{ $image = $image.Fill $fill_opt }} {{ end }} {{ if (.Get &amp;quot;resize&amp;quot;)}} {{ $image = $image.Resize $resize_opt }} {{ end }} {{ end }}</description></item><item><title>Menus</title><link>https://joncourbon.github.io/ecofriendly_website/post/2020-11-16-menus/</link><pubDate>Mon, 16 Nov 2020 00:00:00 +0000</pubDate><guid>https://joncourbon.github.io/ecofriendly_website/post/2020-11-16-menus/</guid><description>&lt;p>Instead of creating a single navigation menu positionned at top &amp;hellip; our bottom of the page for mobile devices, we use two menus.&lt;/p></description></item><item><title>Adding dark mode</title><link>https://joncourbon.github.io/ecofriendly_website/post/2020-11-15-darkmode/</link><pubDate>Sun, 15 Nov 2020 00:00:00 +0000</pubDate><guid>https://joncourbon.github.io/ecofriendly_website/post/2020-11-15-darkmode/</guid><description>&lt;p>The main elements to add a &amp;ldquo;dark mode&amp;rdquo; functionnality:&lt;/p>
&lt;ul>
&lt;li>a button to change the mode dark/light&lt;/li>
&lt;li>a javascript function to apply change (ie adding or removing a &amp;ldquo;dark&amp;rdquo; class)&lt;/li>
&lt;li>using localstorage to use the setting in all pages and for next visit&lt;/li>
&lt;li>adding CSS for this dark mode&lt;/li>
&lt;/ul></description></item><item><title>Adding concatenation and minification functionalities Js Files</title><link>https://joncourbon.github.io/ecofriendly_website/post/2020-11-12-assetconcat/</link><pubDate>Thu, 12 Nov 2020 00:00:00 +0000</pubDate><guid>https://joncourbon.github.io/ecofriendly_website/post/2020-11-12-assetconcat/</guid><description>Similarly to CSS files, Js files can be concatenated and minified (in production).
{{ $fuse := resources.Get &amp;quot;js/fuse.js&amp;quot; }} {{ $fastsearch := resources.Get &amp;quot;js/fastsearch.js&amp;quot; }} {{ $mainjs := resources.Get &amp;quot;js/main.js&amp;quot; }} {{ $mainpersojs := resources.Get &amp;quot;js/mainperso.js&amp;quot; }} {{ if eq hugo.Environment &amp;quot;production&amp;quot; }} {{ $js := slice $fuse $fastsearch $mainjs $mainpersojs | resources.Concat &amp;quot;bundle.js&amp;quot; }} {{ $js := $js | minify }} &amp;lt;script src=&amp;quot;{{ $js.RelPermalink }}&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; {{ else}} &amp;lt;script src=&amp;quot;{{ $fuse.</description></item><item><title>Adding image processing functionalities</title><link>https://joncourbon.github.io/ecofriendly_website/post/2020-11-10-imageprocessing/</link><pubDate>Tue, 10 Nov 2020 00:00:00 +0000</pubDate><guid>https://joncourbon.github.io/ecofriendly_website/post/2020-11-10-imageprocessing/</guid><description>&lt;p>The images weight is one of the most important element to be care of !&lt;/p>
&lt;ul>
&lt;li>Contrary to files concatenation and minification, most of the images are included in pages (not in the page layout) =&amp;gt; we will use a shortcode to enable its use&lt;/li>
&lt;li>We will use asset pipelines =&amp;gt; ressources that will be processed must be in the folder &lt;strong>assets/&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>We want to reduce image weight (not providing &amp;ldquo;responsive&amp;rdquo; set of images ie. differents images in &lt;em>srcset&lt;/em> as in &lt;a href="https://laurakalbag.com/processing-responsive-images-with-hugo/">https://laurakalbag.com/processing-responsive-images-with-hugo/&lt;/a>)&lt;/p></description></item><item><title>Todo</title><link>https://joncourbon.github.io/ecofriendly_website/post/2020-11-10-todo/</link><pubDate>Tue, 10 Nov 2020 00:00:00 +0000</pubDate><guid>https://joncourbon.github.io/ecofriendly_website/post/2020-11-10-todo/</guid><description>Studying:
SEO questions Hugo Robots and Sitemaps</description></item><item><title>Adding concatenation and minification functionalities</title><link>https://joncourbon.github.io/ecofriendly_website/post/2020-11-05-assetconcatminify/</link><pubDate>Thu, 05 Nov 2020 00:00:00 +0000</pubDate><guid>https://joncourbon.github.io/ecofriendly_website/post/2020-11-05-assetconcatminify/</guid><description>&lt;p>In our initial website &lt;em>baseof.html&lt;/em> template, two CSS files are required. In a classical Hugo website, those files are located in the &lt;em>static/&lt;/em> folder in order to be found.&lt;/p>
&lt;pre>&lt;code>&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;{{ &amp;quot;css/milligram.css&amp;quot; | relURL }}&amp;quot;&amp;gt;
&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;{{ &amp;quot;css/style.css&amp;quot; | relURL }}&amp;quot;&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>The weight of CSS files has to be limited as well as the number of request to the server. For a programming point-of-view, the key processes are:&lt;/p>
&lt;ul>
&lt;li>files concatenation and minification =&amp;gt; it can be done during the creation of the website by Hugo!&lt;/li>
&lt;li>purge un-necessary CSS classes =&amp;gt; post-process&lt;/li>
&lt;/ul></description></item><item><title>Creation of the website</title><link>https://joncourbon.github.io/ecofriendly_website/post/2020-11-04-basic_website/</link><pubDate>Wed, 04 Nov 2020 00:00:00 +0000</pubDate><guid>https://joncourbon.github.io/ecofriendly_website/post/2020-11-04-basic_website/</guid><description>&lt;p>As mentionned the page about &lt;a href="https://joncourbon.github.io/ecofriendly_website/ressources/coding/2020-11-03-hugo/">Hugo!&lt;/a>, Hugo is a good choice to create a static website.&lt;/p></description></item></channel></rss>